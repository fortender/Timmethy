<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="timmethymodepanelbg" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\timmethymodepanelbg.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="timmethypanelbg" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\timmethypanelbg.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="timmethypanelbgdis" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\timmethypanelbgdis.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="FileDialogFilterStringMicroCodeFile" xml:space="preserve">
    <value>Micro Program Memory Files (*.tmpm)|*.tmpm</value>
  </data>
  <data name="FileDialogFilterStringMacroCodeFile" xml:space="preserve">
    <value>Random Access Memory Files (*.tram)|*.tram</value>
  </data>
  <data name="FileDialogFilterStringProjectFile" xml:space="preserve">
    <value>Timmethy Project Files (*.tproj)|*.tproj</value>
  </data>
  <data name="MessageBoxTextMacroNameTooLong" xml:space="preserve">
    <value>Due to visualization reasons the macro name should not be longer than six chars</value>
  </data>
  <data name="MessageBoxTextMacroNameTooShort" xml:space="preserve">
    <value>The macro name should be at least two chars long!</value>
  </data>
  <data name="MessageBoxTextUnauthorizedFileAccess" xml:space="preserve">
    <value>You seem to be unauthorized to {0} that file. Relaunch the program with elevated permissions or check the file permissions and access rights.</value>
  </data>
  <data name="MessageBoxTextSerializationErrorOnSave" xml:space="preserve">
    <value>Unexpected serialization error.
Help me to improve this software and fix errors by simply sending the information below via e-mail:
(Press CTRL+C on the keyboard to copy)
SerializationException message:
{0}
StackTrace:
{1}</value>
  </data>
  <data name="MessageBoxTextSerializationErrorOnLoad" xml:space="preserve">
    <value>Either the file you are trying to load is corrupt or not compatible with this version of Timmethy.
Please contact me via email so that i can look into it and maybe add support.</value>
  </data>
  <data name="bonsai" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\bonsai.tmpm;System.Byte[], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="johnny" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\johnny.tmpm;System.Byte[], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="MessageBoxTextAbortPendingExecution" xml:space="preserve">
    <value>Do you want to abort the pending execution?</value>
    <comment>Text is shown when the user wants to quit the application during a program execution</comment>
  </data>
  <data name="MessageBoxTextSaveProjectBeforeQuitting" xml:space="preserve">
    <value>Do you want to save the project before you quit?</value>
    <comment>The text that is shown when a user wants to quit the application without saving the project.</comment>
  </data>
  <data name="MessageBoxTextMacroOverride" xml:space="preserve">
    <value>There is already a macro defined at the specified address.
Do you really want to override it? (This can not be undone!)</value>
    <comment>This text is shown when a user tries to override an existent macro</comment>
  </data>
  <data name="MessageBoxTextEndOfMicroProgramMemoryReached" xml:space="preserve">
    <value>End of micro program memory reached. Stopping the current record...</value>
  </data>
  <data name="by_nc_sa_eu" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\by-nc-sa.eu.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>